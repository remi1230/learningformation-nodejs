openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/REMITAFFOREAU_1/LearningFormation/1.0.0
info:
  version: "1.0.0"
  title: home-iot-api
  description: The API for learning formation NodeJS project
paths:
  /signup:
    post:
      tags:
        - User
      summary: "Registering a new user"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User saved
        '400':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /login:
    post:
      tags:
        - User
      summary: "User connexion"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  userid:
                    type: string
                    example: oid5fu65gdf4gu5dfo8i
                  token:
                    type: string
                    example: df65h43d54h3df24h-54df354h54
        '401':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not found or wrong password !
        '500':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /users/withRentals:
    get:
      tags:
        - User
      summary: "Get users with rental"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: No users have made a rental.
        '500':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /categorieVehicles:
    get:
      tags:
        - CategorieVehicle
      summary: "Get all vehicle categories"
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryVehicle'
        '400':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing or invalid authentication token
  /categorieVehicle/add:
    post:
      tags:
        - CategorieVehicle
      summary: "Add new vehicle category"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryVehicle'
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Vehicle category saved !
        '400':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing or invalid authentication token
  /vehicles:
    get:
      tags:
        - Vehicle
      summary: "Get all vehicles"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        '400':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing or invalid authentication token
  '/vehicles/category/{categoryVehicleId}':
    get:
      tags:
        - Vehicle
      operationId: findVehiclesByCategory
      parameters:
        - name: categoryVehicleId
          in: path
          required: true
          schema:
            type: string
      summary: "Get vehicles by category"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        '404':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: No vehicle in this category.
        '500':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  '/vehicles/detail/{id}':
    get:
      tags:
        - Vehicle
      operationId: getVehicleDetails
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      summary: "Get vehicle details"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        '404':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Vehicle not found..
        '500':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /vehicles/add:
    post:
      tags:
        - Vehicle
      summary: "Add new vehicle"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vehicle'
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Vehicle saved!
        '400':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing or invalid authentication token.
  '/vehicles/update/{id}':
    put:
      tags:
        - Vehicle
      operationId: updateVehicle
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      summary: "Update a vehicle"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vehicle'
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: VÃ©hicle updated !
        '401':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing or invalid authentication token.
  '/vehicles/delete/{id}':
    delete:
      tags:
        - Vehicle
      operationId: deleteVehicle
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      summary: "Delete a vehicle"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Vehicle deleted !
        '401':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing or invalid authentication token or prestataire is not the user.
  /rentals:
    get:
      tags:
        - Rental
      summary: "Get all rental"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rental'
        '400':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing or invalid authentication token
  '/rental/findByRenter/{renterId}':
    get:
      tags:
        - Rental
      operationId: findRentalsByRenter
      parameters:
        - name: renterId
          in: path
          required: true
          schema:
            type: string
      summary: "Get rentals by renter"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rental'
        '404':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: No vehicle in this category.
        '500':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  '/rental/findByVehicle/{vehicleId}':
    get:
      tags:
        - Rental
      operationId: findRentalsByVehicle
      parameters:
        - name: vehicleId
          in: path
          required: true
          schema:
            type: string
      summary: "Get rentals by vehicle"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rental'
        '404':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: No vehicle in this category.
        '500':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  '/rental/getRentalDetails/{id}':
    get:
      tags:
        - Rental
      operationId: getRentalDetails
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      summary: "Get rental detail"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rental'
        '404':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Vehicle not found.
        '500':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  '/rental/update/{id}':
    put:
      tags:
        - Rental
      operationId: updateRentalStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      summary: "Update rental status"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rental'
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rental'
        '404':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Rental not found.
        '500':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /rental/add:
    post:
      tags:
        - Rental
      summary: "Add new rental"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rental'
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Rental saved!
        '400':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing or invalid authentication token.
  '/comment/{vehicleId}':
    get:
      tags:
        - Comment
      operationId: findCommentsByVehicle
      parameters:
        - name: vehicleId
          in: path
          required: true
          schema:
            type: string
      summary: "Get comments for a vehicle"
      responses:
        '200':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '404':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: No Comment for this vehicle.
        '500':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /comment/add:
    post:
      tags:
        - Comment
      summary: "Add new copment"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Comment saved!
        '400':
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing or invalid authentication token.
components:
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          example: 'r@yahoo.fr'
        pseudo:
          type: string
          example: 'coco'
        password:
          type: string
          format: hash
          example: 0729a580-2240-11e6-9eb5-0002a5d5c51b
        role:
          type: string
          example: 'prestataire'
    CategoryVehicle:
      type: object
      properties:
        libelle:
          type: string
          example: 'Automobile'
    Vehicle:
      type: object
      properties:
        libelle:
          type: string
          example: Renault MÃ©gane
        description:
          type: string
          example: Berling rouge de grand standing
        imageUrl:
          type: string
          example: http://1230.fr
        category:
          $ref: '#/components/schemas/CategoryVehicle'
        priceDay:
          type: integer
          format: int32
          example: 12
        prestataire:
          $ref: '#/components/schemas/User'
    Rental:
      type: object
      properties:
        vehicle:
          $ref: '#/components/schemas/Vehicle'
        renter:
          $ref: '#/components/schemas/User'
        startDate:
          type: string
          format: date
          example: '2024-03-12'
        endDate:
          type: string
          format: date
          example: '2024-03-12'
        status:
          type: string
          example: pending
    Comment:
      type: object
      properties:
        vehicle:
          $ref: '#/components/schemas/Vehicle'
        author:
          $ref: '#/components/schemas/User'
        comment:
          type: string
          example: TrÃ¨s bonne voiture !
        date:
          type: string
          format: date
          example: '2024-03-12'